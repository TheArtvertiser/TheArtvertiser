# Makefile.in generated by automake 1.10.1 from Makefile.am.
# garfeild/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/bazar
pkglibdir = $(libdir)/bazar
pkgincludedir = $(includedir)/bazar
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = garfeild
DIST_COMMON = $(nobase_pkginclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/garfeild.pc.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = garfeild.pc
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(pkgincludedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libgarfeild_a_AR = $(AR) $(ARFLAGS)
libgarfeild_a_LIBADD =
am_libgarfeild_a_OBJECTS = keypoint_orientation_corrector.$(OBJEXT) \
	yape.$(OBJEXT) affine_image_generator.$(OBJEXT) \
	image_class_example.$(OBJEXT) \
	image_classification_forest.$(OBJEXT) \
	image_classification_node.$(OBJEXT) \
	image_classification_tree.$(OBJEXT) image_classifier.$(OBJEXT) \
	object_view.$(OBJEXT) planar_object_recognizer.$(OBJEXT) \
	CamAugmentation.$(OBJEXT) CamCalibration.$(OBJEXT) \
	gradient.$(OBJEXT) camera.$(OBJEXT) matvec.$(OBJEXT) \
	ipltexture.$(OBJEXT) lightcollector.$(OBJEXT) \
	lightmap.$(OBJEXT) tri.$(OBJEXT)
libgarfeild_a_OBJECTS = $(am_libgarfeild_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libgarfeild_a_SOURCES)
DIST_SOURCES = $(libgarfeild_a_SOURCES)
pkgconfigDATA_INSTALL = $(INSTALL_DATA)
DATA = $(pkgconfig_DATA)
nobase_pkgincludeHEADERS_INSTALL = $(install_sh_DATA)
HEADERS = $(nobase_pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/artvertiser/Desktop/working/The-Artvertiser/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/artvertiser/Desktop/working/The-Artvertiser/missing --run tar
AUTOCONF = ${SHELL} /home/artvertiser/Desktop/working/The-Artvertiser/missing --run autoconf
AUTOHEADER = ${SHELL} /home/artvertiser/Desktop/working/The-Artvertiser/missing --run autoheader
AUTOMAKE = ${SHELL} /home/artvertiser/Desktop/working/The-Artvertiser/missing --run automake-1.10
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O3 -mtune=native -msse3
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O3 -mtune=native -msse3
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GLEW_LIBS = -lGLEW -lGL  -lm
GLUT_CFLAGS = -pthread
GLUT_LIBS = -lglut  -lSM -lICE -lXmu -lXi  -lGLU -lGL  -lm
GLU_CFLAGS = -pthread
GLU_LIBS = -lGLU -lGL  -lm
GL_CFLAGS = -pthread
GL_LIBS = -lGL  -lm
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/artvertiser/Desktop/working/The-Artvertiser/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
OPENCV_CFLAGS = -I/usr/local/include/opencv  
OPENCV_LIBS = -L/usr/local/lib -lcxcore -lcv -lhighgui -lcvaux -lml  
PACKAGE = bazar
PACKAGE_BUGREPORT = julien.pilet@epfl.ch
PACKAGE_NAME = bazar
PACKAGE_STRING = bazar 1.3.1
PACKAGE_TARNAME = bazar
PACKAGE_VERSION = 1.3.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.3.1
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /home/artvertiser/Desktop/working/The-Artvertiser/garfeild
abs_srcdir = /home/artvertiser/Desktop/working/The-Artvertiser/garfeild
abs_top_builddir = /home/artvertiser/Desktop/working/The-Artvertiser
abs_top_srcdir = /home/artvertiser/Desktop/working/The-Artvertiser
ac_ct_CC = gcc
ac_ct_CXX = g++
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/artvertiser/Desktop/working/The-Artvertiser/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
lib_LIBRARIES = libgarfeild.a
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = garfeild.pc
EXTRA_DIST = garfeild.pc.in
INCLUDES = $(OPENCV_CFLAGS) -I../starter
libgarfeild_a_SOURCES = \
keypoints/keypoint_orientation_corrector.cpp \
keypoints/yape.cpp \
viewsets/affine_image_generator.cpp \
viewsets/image_class_example.cpp \
viewsets/image_classification_forest.cpp \
viewsets/image_classification_node.cpp \
viewsets/image_classification_tree.cpp \
viewsets/image_classifier.cpp \
viewsets/object_view.cpp \
viewsets/planar_object_recognizer.cpp \
keypoints/keypoint.h \
keypoints/keypoint_match.h \
keypoints/keypoint_orientation_corrector.h \
keypoints/yape.h \
viewsets/affine_image_generator.h \
viewsets/example_generator.h \
viewsets/image_class_example.h \
viewsets/image_classification_forest.h \
viewsets/image_classification_node.h \
viewsets/image_classification_tree.h \
viewsets/image_classifier.h \
viewsets/image_object_point_match.h \
viewsets/object_keypoint.h \
viewsets/object_view.h \
viewsets/planar_object_recognizer.h \
garfeild.h \
calib/CamAugmentation.cpp \
calib/CamCalibration.cpp \
calib/CamCalibration.h \
calib/CamAugmentation.h \
calib/gradient.cpp \
calib/camera.cpp \
calib/camera.h \
calib/matvec.h \
calib/matvec.cpp \
lightcalib/ipltexture.cpp \
lightcalib/ipltexture.h \
lightcalib/lightcalib.h \
lightcalib/lightcollector.cpp \
lightcalib/lightcollector.h \
lightcalib/lightmap.cpp \
lightcalib/lightmap.h \
lightcalib/tri.cpp

nobase_pkginclude_HEADERS = \
keypoints/keypoint.h \
keypoints/keypoint_match.h \
keypoints/keypoint_orientation_corrector.h \
keypoints/yape.h \
viewsets/affine_image_generator.h \
viewsets/example_generator.h \
viewsets/image_class_example.h \
viewsets/image_classification_forest.h \
viewsets/image_classification_node.h \
viewsets/image_classification_tree.h \
viewsets/image_classifier.h \
viewsets/image_object_point_match.h \
viewsets/object_keypoint.h \
viewsets/object_view.h \
viewsets/planar_object_recognizer.h \
calib/CamCalibration.h \
calib/CamAugmentation.h \
calib/camera.h \
calib/matvec.h \
garfeild.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  garfeild/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  garfeild/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
garfeild.pc: $(top_builddir)/config.status $(srcdir)/garfeild.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libgarfeild.a: $(libgarfeild_a_OBJECTS) $(libgarfeild_a_DEPENDENCIES) 
	-rm -f libgarfeild.a
	$(libgarfeild_a_AR) libgarfeild.a $(libgarfeild_a_OBJECTS) $(libgarfeild_a_LIBADD)
	$(RANLIB) libgarfeild.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/CamAugmentation.Po
include ./$(DEPDIR)/CamCalibration.Po
include ./$(DEPDIR)/affine_image_generator.Po
include ./$(DEPDIR)/camera.Po
include ./$(DEPDIR)/gradient.Po
include ./$(DEPDIR)/image_class_example.Po
include ./$(DEPDIR)/image_classification_forest.Po
include ./$(DEPDIR)/image_classification_node.Po
include ./$(DEPDIR)/image_classification_tree.Po
include ./$(DEPDIR)/image_classifier.Po
include ./$(DEPDIR)/ipltexture.Po
include ./$(DEPDIR)/keypoint_orientation_corrector.Po
include ./$(DEPDIR)/lightcollector.Po
include ./$(DEPDIR)/lightmap.Po
include ./$(DEPDIR)/matvec.Po
include ./$(DEPDIR)/object_view.Po
include ./$(DEPDIR)/planar_object_recognizer.Po
include ./$(DEPDIR)/tri.Po
include ./$(DEPDIR)/yape.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

keypoint_orientation_corrector.o: keypoints/keypoint_orientation_corrector.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keypoint_orientation_corrector.o -MD -MP -MF $(DEPDIR)/keypoint_orientation_corrector.Tpo -c -o keypoint_orientation_corrector.o `test -f 'keypoints/keypoint_orientation_corrector.cpp' || echo '$(srcdir)/'`keypoints/keypoint_orientation_corrector.cpp
	mv -f $(DEPDIR)/keypoint_orientation_corrector.Tpo $(DEPDIR)/keypoint_orientation_corrector.Po
#	source='keypoints/keypoint_orientation_corrector.cpp' object='keypoint_orientation_corrector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keypoint_orientation_corrector.o `test -f 'keypoints/keypoint_orientation_corrector.cpp' || echo '$(srcdir)/'`keypoints/keypoint_orientation_corrector.cpp

keypoint_orientation_corrector.obj: keypoints/keypoint_orientation_corrector.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT keypoint_orientation_corrector.obj -MD -MP -MF $(DEPDIR)/keypoint_orientation_corrector.Tpo -c -o keypoint_orientation_corrector.obj `if test -f 'keypoints/keypoint_orientation_corrector.cpp'; then $(CYGPATH_W) 'keypoints/keypoint_orientation_corrector.cpp'; else $(CYGPATH_W) '$(srcdir)/keypoints/keypoint_orientation_corrector.cpp'; fi`
	mv -f $(DEPDIR)/keypoint_orientation_corrector.Tpo $(DEPDIR)/keypoint_orientation_corrector.Po
#	source='keypoints/keypoint_orientation_corrector.cpp' object='keypoint_orientation_corrector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o keypoint_orientation_corrector.obj `if test -f 'keypoints/keypoint_orientation_corrector.cpp'; then $(CYGPATH_W) 'keypoints/keypoint_orientation_corrector.cpp'; else $(CYGPATH_W) '$(srcdir)/keypoints/keypoint_orientation_corrector.cpp'; fi`

yape.o: keypoints/yape.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT yape.o -MD -MP -MF $(DEPDIR)/yape.Tpo -c -o yape.o `test -f 'keypoints/yape.cpp' || echo '$(srcdir)/'`keypoints/yape.cpp
	mv -f $(DEPDIR)/yape.Tpo $(DEPDIR)/yape.Po
#	source='keypoints/yape.cpp' object='yape.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o yape.o `test -f 'keypoints/yape.cpp' || echo '$(srcdir)/'`keypoints/yape.cpp

yape.obj: keypoints/yape.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT yape.obj -MD -MP -MF $(DEPDIR)/yape.Tpo -c -o yape.obj `if test -f 'keypoints/yape.cpp'; then $(CYGPATH_W) 'keypoints/yape.cpp'; else $(CYGPATH_W) '$(srcdir)/keypoints/yape.cpp'; fi`
	mv -f $(DEPDIR)/yape.Tpo $(DEPDIR)/yape.Po
#	source='keypoints/yape.cpp' object='yape.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o yape.obj `if test -f 'keypoints/yape.cpp'; then $(CYGPATH_W) 'keypoints/yape.cpp'; else $(CYGPATH_W) '$(srcdir)/keypoints/yape.cpp'; fi`

affine_image_generator.o: viewsets/affine_image_generator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT affine_image_generator.o -MD -MP -MF $(DEPDIR)/affine_image_generator.Tpo -c -o affine_image_generator.o `test -f 'viewsets/affine_image_generator.cpp' || echo '$(srcdir)/'`viewsets/affine_image_generator.cpp
	mv -f $(DEPDIR)/affine_image_generator.Tpo $(DEPDIR)/affine_image_generator.Po
#	source='viewsets/affine_image_generator.cpp' object='affine_image_generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o affine_image_generator.o `test -f 'viewsets/affine_image_generator.cpp' || echo '$(srcdir)/'`viewsets/affine_image_generator.cpp

affine_image_generator.obj: viewsets/affine_image_generator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT affine_image_generator.obj -MD -MP -MF $(DEPDIR)/affine_image_generator.Tpo -c -o affine_image_generator.obj `if test -f 'viewsets/affine_image_generator.cpp'; then $(CYGPATH_W) 'viewsets/affine_image_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/affine_image_generator.cpp'; fi`
	mv -f $(DEPDIR)/affine_image_generator.Tpo $(DEPDIR)/affine_image_generator.Po
#	source='viewsets/affine_image_generator.cpp' object='affine_image_generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o affine_image_generator.obj `if test -f 'viewsets/affine_image_generator.cpp'; then $(CYGPATH_W) 'viewsets/affine_image_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/affine_image_generator.cpp'; fi`

image_class_example.o: viewsets/image_class_example.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image_class_example.o -MD -MP -MF $(DEPDIR)/image_class_example.Tpo -c -o image_class_example.o `test -f 'viewsets/image_class_example.cpp' || echo '$(srcdir)/'`viewsets/image_class_example.cpp
	mv -f $(DEPDIR)/image_class_example.Tpo $(DEPDIR)/image_class_example.Po
#	source='viewsets/image_class_example.cpp' object='image_class_example.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image_class_example.o `test -f 'viewsets/image_class_example.cpp' || echo '$(srcdir)/'`viewsets/image_class_example.cpp

image_class_example.obj: viewsets/image_class_example.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image_class_example.obj -MD -MP -MF $(DEPDIR)/image_class_example.Tpo -c -o image_class_example.obj `if test -f 'viewsets/image_class_example.cpp'; then $(CYGPATH_W) 'viewsets/image_class_example.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/image_class_example.cpp'; fi`
	mv -f $(DEPDIR)/image_class_example.Tpo $(DEPDIR)/image_class_example.Po
#	source='viewsets/image_class_example.cpp' object='image_class_example.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image_class_example.obj `if test -f 'viewsets/image_class_example.cpp'; then $(CYGPATH_W) 'viewsets/image_class_example.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/image_class_example.cpp'; fi`

image_classification_forest.o: viewsets/image_classification_forest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image_classification_forest.o -MD -MP -MF $(DEPDIR)/image_classification_forest.Tpo -c -o image_classification_forest.o `test -f 'viewsets/image_classification_forest.cpp' || echo '$(srcdir)/'`viewsets/image_classification_forest.cpp
	mv -f $(DEPDIR)/image_classification_forest.Tpo $(DEPDIR)/image_classification_forest.Po
#	source='viewsets/image_classification_forest.cpp' object='image_classification_forest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image_classification_forest.o `test -f 'viewsets/image_classification_forest.cpp' || echo '$(srcdir)/'`viewsets/image_classification_forest.cpp

image_classification_forest.obj: viewsets/image_classification_forest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image_classification_forest.obj -MD -MP -MF $(DEPDIR)/image_classification_forest.Tpo -c -o image_classification_forest.obj `if test -f 'viewsets/image_classification_forest.cpp'; then $(CYGPATH_W) 'viewsets/image_classification_forest.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/image_classification_forest.cpp'; fi`
	mv -f $(DEPDIR)/image_classification_forest.Tpo $(DEPDIR)/image_classification_forest.Po
#	source='viewsets/image_classification_forest.cpp' object='image_classification_forest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image_classification_forest.obj `if test -f 'viewsets/image_classification_forest.cpp'; then $(CYGPATH_W) 'viewsets/image_classification_forest.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/image_classification_forest.cpp'; fi`

image_classification_node.o: viewsets/image_classification_node.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image_classification_node.o -MD -MP -MF $(DEPDIR)/image_classification_node.Tpo -c -o image_classification_node.o `test -f 'viewsets/image_classification_node.cpp' || echo '$(srcdir)/'`viewsets/image_classification_node.cpp
	mv -f $(DEPDIR)/image_classification_node.Tpo $(DEPDIR)/image_classification_node.Po
#	source='viewsets/image_classification_node.cpp' object='image_classification_node.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image_classification_node.o `test -f 'viewsets/image_classification_node.cpp' || echo '$(srcdir)/'`viewsets/image_classification_node.cpp

image_classification_node.obj: viewsets/image_classification_node.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image_classification_node.obj -MD -MP -MF $(DEPDIR)/image_classification_node.Tpo -c -o image_classification_node.obj `if test -f 'viewsets/image_classification_node.cpp'; then $(CYGPATH_W) 'viewsets/image_classification_node.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/image_classification_node.cpp'; fi`
	mv -f $(DEPDIR)/image_classification_node.Tpo $(DEPDIR)/image_classification_node.Po
#	source='viewsets/image_classification_node.cpp' object='image_classification_node.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image_classification_node.obj `if test -f 'viewsets/image_classification_node.cpp'; then $(CYGPATH_W) 'viewsets/image_classification_node.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/image_classification_node.cpp'; fi`

image_classification_tree.o: viewsets/image_classification_tree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image_classification_tree.o -MD -MP -MF $(DEPDIR)/image_classification_tree.Tpo -c -o image_classification_tree.o `test -f 'viewsets/image_classification_tree.cpp' || echo '$(srcdir)/'`viewsets/image_classification_tree.cpp
	mv -f $(DEPDIR)/image_classification_tree.Tpo $(DEPDIR)/image_classification_tree.Po
#	source='viewsets/image_classification_tree.cpp' object='image_classification_tree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image_classification_tree.o `test -f 'viewsets/image_classification_tree.cpp' || echo '$(srcdir)/'`viewsets/image_classification_tree.cpp

image_classification_tree.obj: viewsets/image_classification_tree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image_classification_tree.obj -MD -MP -MF $(DEPDIR)/image_classification_tree.Tpo -c -o image_classification_tree.obj `if test -f 'viewsets/image_classification_tree.cpp'; then $(CYGPATH_W) 'viewsets/image_classification_tree.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/image_classification_tree.cpp'; fi`
	mv -f $(DEPDIR)/image_classification_tree.Tpo $(DEPDIR)/image_classification_tree.Po
#	source='viewsets/image_classification_tree.cpp' object='image_classification_tree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image_classification_tree.obj `if test -f 'viewsets/image_classification_tree.cpp'; then $(CYGPATH_W) 'viewsets/image_classification_tree.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/image_classification_tree.cpp'; fi`

image_classifier.o: viewsets/image_classifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image_classifier.o -MD -MP -MF $(DEPDIR)/image_classifier.Tpo -c -o image_classifier.o `test -f 'viewsets/image_classifier.cpp' || echo '$(srcdir)/'`viewsets/image_classifier.cpp
	mv -f $(DEPDIR)/image_classifier.Tpo $(DEPDIR)/image_classifier.Po
#	source='viewsets/image_classifier.cpp' object='image_classifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image_classifier.o `test -f 'viewsets/image_classifier.cpp' || echo '$(srcdir)/'`viewsets/image_classifier.cpp

image_classifier.obj: viewsets/image_classifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image_classifier.obj -MD -MP -MF $(DEPDIR)/image_classifier.Tpo -c -o image_classifier.obj `if test -f 'viewsets/image_classifier.cpp'; then $(CYGPATH_W) 'viewsets/image_classifier.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/image_classifier.cpp'; fi`
	mv -f $(DEPDIR)/image_classifier.Tpo $(DEPDIR)/image_classifier.Po
#	source='viewsets/image_classifier.cpp' object='image_classifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image_classifier.obj `if test -f 'viewsets/image_classifier.cpp'; then $(CYGPATH_W) 'viewsets/image_classifier.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/image_classifier.cpp'; fi`

object_view.o: viewsets/object_view.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT object_view.o -MD -MP -MF $(DEPDIR)/object_view.Tpo -c -o object_view.o `test -f 'viewsets/object_view.cpp' || echo '$(srcdir)/'`viewsets/object_view.cpp
	mv -f $(DEPDIR)/object_view.Tpo $(DEPDIR)/object_view.Po
#	source='viewsets/object_view.cpp' object='object_view.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o object_view.o `test -f 'viewsets/object_view.cpp' || echo '$(srcdir)/'`viewsets/object_view.cpp

object_view.obj: viewsets/object_view.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT object_view.obj -MD -MP -MF $(DEPDIR)/object_view.Tpo -c -o object_view.obj `if test -f 'viewsets/object_view.cpp'; then $(CYGPATH_W) 'viewsets/object_view.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/object_view.cpp'; fi`
	mv -f $(DEPDIR)/object_view.Tpo $(DEPDIR)/object_view.Po
#	source='viewsets/object_view.cpp' object='object_view.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o object_view.obj `if test -f 'viewsets/object_view.cpp'; then $(CYGPATH_W) 'viewsets/object_view.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/object_view.cpp'; fi`

planar_object_recognizer.o: viewsets/planar_object_recognizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT planar_object_recognizer.o -MD -MP -MF $(DEPDIR)/planar_object_recognizer.Tpo -c -o planar_object_recognizer.o `test -f 'viewsets/planar_object_recognizer.cpp' || echo '$(srcdir)/'`viewsets/planar_object_recognizer.cpp
	mv -f $(DEPDIR)/planar_object_recognizer.Tpo $(DEPDIR)/planar_object_recognizer.Po
#	source='viewsets/planar_object_recognizer.cpp' object='planar_object_recognizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o planar_object_recognizer.o `test -f 'viewsets/planar_object_recognizer.cpp' || echo '$(srcdir)/'`viewsets/planar_object_recognizer.cpp

planar_object_recognizer.obj: viewsets/planar_object_recognizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT planar_object_recognizer.obj -MD -MP -MF $(DEPDIR)/planar_object_recognizer.Tpo -c -o planar_object_recognizer.obj `if test -f 'viewsets/planar_object_recognizer.cpp'; then $(CYGPATH_W) 'viewsets/planar_object_recognizer.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/planar_object_recognizer.cpp'; fi`
	mv -f $(DEPDIR)/planar_object_recognizer.Tpo $(DEPDIR)/planar_object_recognizer.Po
#	source='viewsets/planar_object_recognizer.cpp' object='planar_object_recognizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o planar_object_recognizer.obj `if test -f 'viewsets/planar_object_recognizer.cpp'; then $(CYGPATH_W) 'viewsets/planar_object_recognizer.cpp'; else $(CYGPATH_W) '$(srcdir)/viewsets/planar_object_recognizer.cpp'; fi`

CamAugmentation.o: calib/CamAugmentation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CamAugmentation.o -MD -MP -MF $(DEPDIR)/CamAugmentation.Tpo -c -o CamAugmentation.o `test -f 'calib/CamAugmentation.cpp' || echo '$(srcdir)/'`calib/CamAugmentation.cpp
	mv -f $(DEPDIR)/CamAugmentation.Tpo $(DEPDIR)/CamAugmentation.Po
#	source='calib/CamAugmentation.cpp' object='CamAugmentation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CamAugmentation.o `test -f 'calib/CamAugmentation.cpp' || echo '$(srcdir)/'`calib/CamAugmentation.cpp

CamAugmentation.obj: calib/CamAugmentation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CamAugmentation.obj -MD -MP -MF $(DEPDIR)/CamAugmentation.Tpo -c -o CamAugmentation.obj `if test -f 'calib/CamAugmentation.cpp'; then $(CYGPATH_W) 'calib/CamAugmentation.cpp'; else $(CYGPATH_W) '$(srcdir)/calib/CamAugmentation.cpp'; fi`
	mv -f $(DEPDIR)/CamAugmentation.Tpo $(DEPDIR)/CamAugmentation.Po
#	source='calib/CamAugmentation.cpp' object='CamAugmentation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CamAugmentation.obj `if test -f 'calib/CamAugmentation.cpp'; then $(CYGPATH_W) 'calib/CamAugmentation.cpp'; else $(CYGPATH_W) '$(srcdir)/calib/CamAugmentation.cpp'; fi`

CamCalibration.o: calib/CamCalibration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CamCalibration.o -MD -MP -MF $(DEPDIR)/CamCalibration.Tpo -c -o CamCalibration.o `test -f 'calib/CamCalibration.cpp' || echo '$(srcdir)/'`calib/CamCalibration.cpp
	mv -f $(DEPDIR)/CamCalibration.Tpo $(DEPDIR)/CamCalibration.Po
#	source='calib/CamCalibration.cpp' object='CamCalibration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CamCalibration.o `test -f 'calib/CamCalibration.cpp' || echo '$(srcdir)/'`calib/CamCalibration.cpp

CamCalibration.obj: calib/CamCalibration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CamCalibration.obj -MD -MP -MF $(DEPDIR)/CamCalibration.Tpo -c -o CamCalibration.obj `if test -f 'calib/CamCalibration.cpp'; then $(CYGPATH_W) 'calib/CamCalibration.cpp'; else $(CYGPATH_W) '$(srcdir)/calib/CamCalibration.cpp'; fi`
	mv -f $(DEPDIR)/CamCalibration.Tpo $(DEPDIR)/CamCalibration.Po
#	source='calib/CamCalibration.cpp' object='CamCalibration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CamCalibration.obj `if test -f 'calib/CamCalibration.cpp'; then $(CYGPATH_W) 'calib/CamCalibration.cpp'; else $(CYGPATH_W) '$(srcdir)/calib/CamCalibration.cpp'; fi`

gradient.o: calib/gradient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gradient.o -MD -MP -MF $(DEPDIR)/gradient.Tpo -c -o gradient.o `test -f 'calib/gradient.cpp' || echo '$(srcdir)/'`calib/gradient.cpp
	mv -f $(DEPDIR)/gradient.Tpo $(DEPDIR)/gradient.Po
#	source='calib/gradient.cpp' object='gradient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gradient.o `test -f 'calib/gradient.cpp' || echo '$(srcdir)/'`calib/gradient.cpp

gradient.obj: calib/gradient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gradient.obj -MD -MP -MF $(DEPDIR)/gradient.Tpo -c -o gradient.obj `if test -f 'calib/gradient.cpp'; then $(CYGPATH_W) 'calib/gradient.cpp'; else $(CYGPATH_W) '$(srcdir)/calib/gradient.cpp'; fi`
	mv -f $(DEPDIR)/gradient.Tpo $(DEPDIR)/gradient.Po
#	source='calib/gradient.cpp' object='gradient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gradient.obj `if test -f 'calib/gradient.cpp'; then $(CYGPATH_W) 'calib/gradient.cpp'; else $(CYGPATH_W) '$(srcdir)/calib/gradient.cpp'; fi`

camera.o: calib/camera.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT camera.o -MD -MP -MF $(DEPDIR)/camera.Tpo -c -o camera.o `test -f 'calib/camera.cpp' || echo '$(srcdir)/'`calib/camera.cpp
	mv -f $(DEPDIR)/camera.Tpo $(DEPDIR)/camera.Po
#	source='calib/camera.cpp' object='camera.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o camera.o `test -f 'calib/camera.cpp' || echo '$(srcdir)/'`calib/camera.cpp

camera.obj: calib/camera.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT camera.obj -MD -MP -MF $(DEPDIR)/camera.Tpo -c -o camera.obj `if test -f 'calib/camera.cpp'; then $(CYGPATH_W) 'calib/camera.cpp'; else $(CYGPATH_W) '$(srcdir)/calib/camera.cpp'; fi`
	mv -f $(DEPDIR)/camera.Tpo $(DEPDIR)/camera.Po
#	source='calib/camera.cpp' object='camera.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o camera.obj `if test -f 'calib/camera.cpp'; then $(CYGPATH_W) 'calib/camera.cpp'; else $(CYGPATH_W) '$(srcdir)/calib/camera.cpp'; fi`

matvec.o: calib/matvec.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT matvec.o -MD -MP -MF $(DEPDIR)/matvec.Tpo -c -o matvec.o `test -f 'calib/matvec.cpp' || echo '$(srcdir)/'`calib/matvec.cpp
	mv -f $(DEPDIR)/matvec.Tpo $(DEPDIR)/matvec.Po
#	source='calib/matvec.cpp' object='matvec.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o matvec.o `test -f 'calib/matvec.cpp' || echo '$(srcdir)/'`calib/matvec.cpp

matvec.obj: calib/matvec.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT matvec.obj -MD -MP -MF $(DEPDIR)/matvec.Tpo -c -o matvec.obj `if test -f 'calib/matvec.cpp'; then $(CYGPATH_W) 'calib/matvec.cpp'; else $(CYGPATH_W) '$(srcdir)/calib/matvec.cpp'; fi`
	mv -f $(DEPDIR)/matvec.Tpo $(DEPDIR)/matvec.Po
#	source='calib/matvec.cpp' object='matvec.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o matvec.obj `if test -f 'calib/matvec.cpp'; then $(CYGPATH_W) 'calib/matvec.cpp'; else $(CYGPATH_W) '$(srcdir)/calib/matvec.cpp'; fi`

ipltexture.o: lightcalib/ipltexture.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ipltexture.o -MD -MP -MF $(DEPDIR)/ipltexture.Tpo -c -o ipltexture.o `test -f 'lightcalib/ipltexture.cpp' || echo '$(srcdir)/'`lightcalib/ipltexture.cpp
	mv -f $(DEPDIR)/ipltexture.Tpo $(DEPDIR)/ipltexture.Po
#	source='lightcalib/ipltexture.cpp' object='ipltexture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ipltexture.o `test -f 'lightcalib/ipltexture.cpp' || echo '$(srcdir)/'`lightcalib/ipltexture.cpp

ipltexture.obj: lightcalib/ipltexture.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ipltexture.obj -MD -MP -MF $(DEPDIR)/ipltexture.Tpo -c -o ipltexture.obj `if test -f 'lightcalib/ipltexture.cpp'; then $(CYGPATH_W) 'lightcalib/ipltexture.cpp'; else $(CYGPATH_W) '$(srcdir)/lightcalib/ipltexture.cpp'; fi`
	mv -f $(DEPDIR)/ipltexture.Tpo $(DEPDIR)/ipltexture.Po
#	source='lightcalib/ipltexture.cpp' object='ipltexture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ipltexture.obj `if test -f 'lightcalib/ipltexture.cpp'; then $(CYGPATH_W) 'lightcalib/ipltexture.cpp'; else $(CYGPATH_W) '$(srcdir)/lightcalib/ipltexture.cpp'; fi`

lightcollector.o: lightcalib/lightcollector.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lightcollector.o -MD -MP -MF $(DEPDIR)/lightcollector.Tpo -c -o lightcollector.o `test -f 'lightcalib/lightcollector.cpp' || echo '$(srcdir)/'`lightcalib/lightcollector.cpp
	mv -f $(DEPDIR)/lightcollector.Tpo $(DEPDIR)/lightcollector.Po
#	source='lightcalib/lightcollector.cpp' object='lightcollector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lightcollector.o `test -f 'lightcalib/lightcollector.cpp' || echo '$(srcdir)/'`lightcalib/lightcollector.cpp

lightcollector.obj: lightcalib/lightcollector.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lightcollector.obj -MD -MP -MF $(DEPDIR)/lightcollector.Tpo -c -o lightcollector.obj `if test -f 'lightcalib/lightcollector.cpp'; then $(CYGPATH_W) 'lightcalib/lightcollector.cpp'; else $(CYGPATH_W) '$(srcdir)/lightcalib/lightcollector.cpp'; fi`
	mv -f $(DEPDIR)/lightcollector.Tpo $(DEPDIR)/lightcollector.Po
#	source='lightcalib/lightcollector.cpp' object='lightcollector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lightcollector.obj `if test -f 'lightcalib/lightcollector.cpp'; then $(CYGPATH_W) 'lightcalib/lightcollector.cpp'; else $(CYGPATH_W) '$(srcdir)/lightcalib/lightcollector.cpp'; fi`

lightmap.o: lightcalib/lightmap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lightmap.o -MD -MP -MF $(DEPDIR)/lightmap.Tpo -c -o lightmap.o `test -f 'lightcalib/lightmap.cpp' || echo '$(srcdir)/'`lightcalib/lightmap.cpp
	mv -f $(DEPDIR)/lightmap.Tpo $(DEPDIR)/lightmap.Po
#	source='lightcalib/lightmap.cpp' object='lightmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lightmap.o `test -f 'lightcalib/lightmap.cpp' || echo '$(srcdir)/'`lightcalib/lightmap.cpp

lightmap.obj: lightcalib/lightmap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lightmap.obj -MD -MP -MF $(DEPDIR)/lightmap.Tpo -c -o lightmap.obj `if test -f 'lightcalib/lightmap.cpp'; then $(CYGPATH_W) 'lightcalib/lightmap.cpp'; else $(CYGPATH_W) '$(srcdir)/lightcalib/lightmap.cpp'; fi`
	mv -f $(DEPDIR)/lightmap.Tpo $(DEPDIR)/lightmap.Po
#	source='lightcalib/lightmap.cpp' object='lightmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lightmap.obj `if test -f 'lightcalib/lightmap.cpp'; then $(CYGPATH_W) 'lightcalib/lightmap.cpp'; else $(CYGPATH_W) '$(srcdir)/lightcalib/lightmap.cpp'; fi`

tri.o: lightcalib/tri.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tri.o -MD -MP -MF $(DEPDIR)/tri.Tpo -c -o tri.o `test -f 'lightcalib/tri.cpp' || echo '$(srcdir)/'`lightcalib/tri.cpp
	mv -f $(DEPDIR)/tri.Tpo $(DEPDIR)/tri.Po
#	source='lightcalib/tri.cpp' object='tri.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tri.o `test -f 'lightcalib/tri.cpp' || echo '$(srcdir)/'`lightcalib/tri.cpp

tri.obj: lightcalib/tri.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tri.obj -MD -MP -MF $(DEPDIR)/tri.Tpo -c -o tri.obj `if test -f 'lightcalib/tri.cpp'; then $(CYGPATH_W) 'lightcalib/tri.cpp'; else $(CYGPATH_W) '$(srcdir)/lightcalib/tri.cpp'; fi`
	mv -f $(DEPDIR)/tri.Tpo $(DEPDIR)/tri.Po
#	source='lightcalib/tri.cpp' object='tri.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tri.obj `if test -f 'lightcalib/tri.cpp'; then $(CYGPATH_W) 'lightcalib/tri.cpp'; else $(CYGPATH_W) '$(srcdir)/lightcalib/tri.cpp'; fi`
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgconfigDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  $(pkgconfigDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done
install-nobase_pkgincludeHEADERS: $(nobase_pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@$(am__vpath_adj_setup) \
	list='$(nobase_pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  $(am__vpath_adj) \
	  echo " $(nobase_pkgincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  $(nobase_pkgincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

uninstall-nobase_pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@$(am__vpath_adj_setup) \
	list='$(nobase_pkginclude_HEADERS)'; for p in $$list; do \
	  $(am__vpath_adj) \
	  echo " rm -f '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-nobase_pkgincludeHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

profile: CXXFLAGS+=-DPROFILE
profile: all

uninstall-am: uninstall-libLIBRARIES \
	uninstall-nobase_pkgincludeHEADERS uninstall-pkgconfigDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man \
	install-nobase_pkgincludeHEADERS install-pdf install-pdf-am \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libLIBRARIES \
	uninstall-nobase_pkgincludeHEADERS uninstall-pkgconfigDATA profile

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
